{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "13691315627011237106"
    }
  },
  "parameters": {
    "userCapacity": {
      "type": "int"
    },
    "startTime": {
      "type": "string"
    },
    "endTime": {
      "type": "string"
    },
    "examId": {
      "type": "string"
    },
    "instanceId": {
      "type": "string"
    },
    "trustedProxySecret": {
      "type": "securestring"
    },
    "apiBaseUrl": {
      "type": "string"
    },
    "entraAuthority": {
      "type": "string"
    },
    "entraClientId": {
      "type": "string"
    },
    "tokenExpirationTime": {
      "type": "string",
      "defaultValue": "[dateTimeAdd(utcNow(), 'P1D')]"
    },
    "vmAdminUser": {
      "type": "string",
      "defaultValue": "syadmin"
    },
    "proxyAdminUsername": {
      "type": "string",
      "defaultValue": "syuser"
    },
    "studentsPerProxy": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Number of students that can be supported by a single proxy VM"
      }
    },
    "minProxyVms": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Minimum number of proxy VMs to deploy"
      }
    },
    "internalServiceLinkIdsJSON": {
      "type": "string",
      "defaultValue": "[[[builtin:internalServiceLinkIdsJSON]]]"
    }
  },
  "variables": {
    "internalServiceLinkIds": "[json(parameters('internalServiceLinkIdsJSON'))]",
    "internalServicesPrivateDNSZoneName": "[[[param:internalServicesPrivateDNSZoneName]]]",
    "numProxyVms": "[min(max(div(sub(add(parameters('userCapacity'), parameters('studentsPerProxy')), 1), parameters('studentsPerProxy')), parameters('minProxyVms')), 10)]",
    "templateVersion": "0.0.0",
    "vmCreationTemplateUri": "[[[param:vmCreationTemplateUri]]",
    "location": "[resourceGroup().location]",
    "avdMetadataLocation": "westeurope",
    "defaultNamingPrefix": "[resourceGroup().name]",
    "natIpName": "[format('{0}ip', variables('defaultNamingPrefix'))]",
    "natName": "[format('{0}nat', variables('defaultNamingPrefix'))]",
    "vnetName": "[format('{0}vnet', variables('defaultNamingPrefix'))]",
    "vnetSubnetCIDR": "10.0.0.0/19",
    "sessionhostsSubnetCIDR": "10.0.0.0/20",
    "sessionhostsSubnetName": "sessionhosts",
    "servicesSubnetCIDR": "10.0.16.0/20",
    "servicesSubnetName": "services",
    "privatelinkZoneName": "privatelink.wvd.microsoft.com",
    "hostpoolName": "[format('{0}pool', variables('defaultNamingPrefix'))]",
    "appGroupName": "[format('{0}dag', variables('defaultNamingPrefix'))]",
    "workspaceName": "[format('{0}ws', variables('defaultNamingPrefix'))]",
    "vmNumberOfInstances": "[parameters('userCapacity')]",
    "vmNamePrefix": "[format('syvm{0}', substring(parameters('examId'), 0, 6))]",
    "vmCustomImageSourceId": "[[[param:vmCustomImageSourceId]]]",
    "ipRangesWhitelist": [],
    "sshPubKey": "[[[param:proxyRSAPublicKey]]]",
    "proxyVmSize": "Standard_D1_v2",
    "proxyIpName": "[format('{0}proxy-ip', variables('defaultNamingPrefix'))]",
    "proxyNsgName": "[format('{0}proxy-nsg', variables('defaultNamingPrefix'))]",
    "proxyNicName": "[format('{0}proxy-nic', variables('defaultNamingPrefix'))]",
    "proxyVmName": "[format('{0}proxy-vm', variables('defaultNamingPrefix'))]",
    "proxyInstallScriptUrl": "https://raw.githubusercontent.com/schoolyear/avd-deployments/main/deployment/proxy_installation.sh",
    "proxyInstallScriptName": "proxy_installation.sh",
    "trustedProxyBinaryUrl": "https://install.exams.schoolyear.app/trusted-proxy/latest-linux-amd64",
    "sessionHostProxyWhitelist": "[[[builtin:sessionHostProxyWhitelist]]]",
    "proxyDnsEntryDeploymentName": "proxy-dns-entry",
    "dnsZoneResourceGroup": "[[[param:dnsZoneResourceGroup]]]",
    "dnsZoneName": "[[[param:dnsZoneName]]]",
    "keyVaultResourceGroup": "[[[param:keyVaultResourceGroup]]]",
    "keyVaultName": "[[[param:keyVaultName]]]",
    "keyVaultCertificateName": "[[[param:keyVaultCertificateName]]]",
    "keyVaultRoleAssignmentDeploymentName": "keyvaultRoleAssignment",
    "enableProxySsh": "[[[param:enableProxySsh]]]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "natIpName": {
            "value": "[variables('natIpName')]"
          },
          "natName": {
            "value": "[variables('natName')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "vnetSubnetCIDR": {
            "value": "[variables('vnetSubnetCIDR')]"
          },
          "sessionhostsSubnetName": {
            "value": "[variables('sessionhostsSubnetName')]"
          },
          "sessionhostsSubnetCIDR": {
            "value": "[variables('sessionhostsSubnetCIDR')]"
          },
          "servicesSubnetName": {
            "value": "[variables('servicesSubnetName')]"
          },
          "servicesSubnetCIDR": {
            "value": "[variables('servicesSubnetCIDR')]"
          },
          "privatelinkZoneName": {
            "value": "[variables('privatelinkZoneName')]"
          },
          "internalServiceLinkIds": {
            "value": "[variables('internalServiceLinkIds')]"
          },
          "internalServicesPrivateDNSZoneName": {
            "value": "[variables('internalServicesPrivateDNSZoneName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "10921119917896698422"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "natIpName": {
              "type": "string"
            },
            "natName": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetSubnetCIDR": {
              "type": "string"
            },
            "sessionhostsSubnetName": {
              "type": "string"
            },
            "sessionhostsSubnetCIDR": {
              "type": "string"
            },
            "servicesSubnetName": {
              "type": "string"
            },
            "servicesSubnetCIDR": {
              "type": "string"
            },
            "privatelinkZoneName": {
              "type": "string"
            },
            "internalServiceLinkIds": {
              "type": "object"
            },
            "internalServicesPrivateDNSZoneName": {
              "type": "string"
            }
          },
          "variables": {
            "serviceIds": "[items(parameters('internalServiceLinkIds'))]",
            "resolvedInternalServicesPrivateDNSZoneName": "[if(not(empty(parameters('internalServicesPrivateDNSZoneName'))), parameters('internalServicesPrivateDNSZoneName'), 'customerinternalservices.syavd.local')]",
            "virtualNetworkLinkName": "[format('{0}/vnetLink', parameters('privatelinkZoneName'))]",
            "deployPrivateDNSZoneForInternalServices": "[not(empty(variables('serviceIds')))]"
          },
          "resources": [
            {
              "condition": "[variables('deployPrivateDNSZoneForInternalServices')]",
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', variables('resolvedInternalServicesPrivateDNSZoneName'), format('{0}-vnet-link', variables('resolvedInternalServicesPrivateDNSZoneName')))]",
              "location": "global",
              "properties": {
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('resolvedInternalServicesPrivateDNSZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "copy": {
                "name": "licenseServersPrivateDNSZone::licenseServersPrivateDNSZoneRecords",
                "count": "[length(range(0, length(variables('serviceIds'))))]"
              },
              "condition": "[variables('deployPrivateDNSZoneForInternalServices')]",
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', variables('resolvedInternalServicesPrivateDNSZoneName'), variables('serviceIds')[range(0, length(variables('serviceIds')))[copyIndex()]].key)]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-nic-ip-extractor', variables('serviceIds')[range(0, length(variables('serviceIds')))[range(0, length(variables('serviceIds')))[copyIndex()]]].key)), '2022-09-01').outputs.privateIpAddr.value]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('resolvedInternalServicesPrivateDNSZoneName'))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-nic-ip-extractor', variables('serviceIds')[range(0, length(variables('serviceIds')))[range(0, length(variables('serviceIds')))[copyIndex()]]].key))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-05-01",
              "name": "[parameters('natIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ddosSettings": {
                  "protectionMode": "VirtualNetworkInherited"
                }
              }
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2023-05-01",
              "name": "[parameters('natName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('natIpName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('natIpName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-05-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetSubnetCIDR')]"
                  ]
                },
                "encryption": {
                  "enabled": false,
                  "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                  {
                    "name": "[parameters('sessionhostsSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('sessionhostsSubnetCIDR')]",
                      "natGateway": {
                        "id": "[resourceId('Microsoft.Network/natGateways', parameters('natName'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "defaultOutboundAccess": true
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "name": "[parameters('servicesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('servicesSubnetCIDR')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "defaultOutboundAccess": true
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2018-09-01",
              "name": "[parameters('privatelinkZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[variables('virtualNetworkLinkName')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privatelinkZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "copy": {
                "name": "privateEndpoints",
                "count": "[length(variables('serviceIds'))]"
              },
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}-private-endpoint', variables('serviceIds')[copyIndex()].key)]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-service-connection', variables('serviceIds')[copyIndex()].key)]",
                    "properties": {
                      "privateLinkServiceId": "[variables('serviceIds')[copyIndex()].value]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('servicesSubnetName'))]"
                },
                "customNetworkInterfaceName": "[format('{0}-private-endpoint-nic', variables('serviceIds')[copyIndex()].key)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "condition": "[variables('deployPrivateDNSZoneForInternalServices')]",
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "name": "[variables('resolvedInternalServicesPrivateDNSZoneName')]",
              "location": "global"
            },
            {
              "copy": {
                "name": "nicIpExtractors",
                "count": "[length(range(0, length(variables('serviceIds'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-nic-ip-extractor', variables('serviceIds')[range(0, length(variables('serviceIds')))[copyIndex()]].key)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "nicName": {
                    "value": "[last(split(reference(resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', variables('serviceIds')[range(0, length(variables('serviceIds')))[copyIndex()]].key)), '2024-05-01').networkInterfaces[0].id, '/'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.1.42791",
                      "templateHash": "12371902749929184106"
                    }
                  },
                  "parameters": {
                    "nicName": {
                      "type": "string"
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "privateIpAddr": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('nicName')), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', variables('serviceIds')[range(0, length(variables('serviceIds')))[copyIndex()]].key))]"
              ]
            }
          ],
          "outputs": {
            "ipAddresses": {
              "type": "array",
              "value": [
                "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('natIpName')), '2023-05-01').ipAddress]"
              ]
            },
            "sessionHostsSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('sessionhostsSubnetName'))]"
            },
            "servicesSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('servicesSubnetName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "avd-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hostpoolName": {
            "value": "[variables('hostpoolName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "avdMetadataLocation": {
            "value": "[variables('avdMetadataLocation')]"
          },
          "workSpaceName": {
            "value": "[variables('workspaceName')]"
          },
          "tokenExpirationTime": {
            "value": "[parameters('tokenExpirationTime')]"
          },
          "appGroupName": {
            "value": "[variables('appGroupName')]"
          },
          "servicesSubnetResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network-deployment'), '2022-09-01').outputs.servicesSubnetId.value]"
          },
          "privateLinkZoneName": {
            "value": "[variables('privatelinkZoneName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "12121794625664440789"
            }
          },
          "parameters": {
            "hostpoolName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Hostpool to be created."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location where the resources will be deployed."
              }
            },
            "avdMetadataLocation": {
              "type": "string",
              "metadata": {
                "description": "The location where the AVD metadata resources will be deployed."
              }
            },
            "workSpaceName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The name of the workspace to be attach to new Applicaiton Group."
              }
            },
            "tokenExpirationTime": {
              "type": "string",
              "metadata": {
                "description": "Hostpool token expiration time"
              }
            },
            "appGroupName": {
              "type": "string"
            },
            "servicesSubnetResourceId": {
              "type": "string"
            },
            "privateLinkZoneName": {
              "type": "string"
            }
          },
          "variables": {
            "logAnalyticsWorkspaceId": "/subscriptions/b0604914-cd2c-4ac9-91bf-c25b32fd0892/resourceGroups/RG-LogWorkspace/providers/Microsoft.OperationalInsights/workspaces/SchoolyearLogWorkspace",
            "privateEndpointZoneLinkName": "default",
            "privateEndpointConnectionName": "schoolyear-secure-endpoint-connection",
            "privateEndpointConnectionNicName": "[format('{0}-nic', variables('privateEndpointConnectionName'))]",
            "privateEndpointConnectionZoneLinkName": "[format('{0}/{1}', variables('privateEndpointConnectionName'), variables('privateEndpointZoneLinkName'))]",
            "privateEndpointFeedName": "schoolyear-secure-endpoint-feed",
            "privateEndpointFeedNicName": "[format('{0}-nic', variables('privateEndpointFeedName'))]",
            "privateEndpointFeedZoneLinkName": "[format('{0}/{1}', variables('privateEndpointFeedName'), variables('privateEndpointZoneLinkName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DesktopVirtualization/hostPools",
              "apiVersion": "2024-04-08-preview",
              "name": "[parameters('hostpoolName')]",
              "location": "[parameters('avdMetadataLocation')]",
              "properties": {
                "description": "Created by Schoolyear",
                "hostPoolType": "Personal",
                "loadBalancerType": "Persistent",
                "validationEnvironment": false,
                "preferredAppGroupType": "Desktop",
                "ring": null,
                "registrationInfo": {
                  "expirationTime": "[parameters('tokenExpirationTime')]",
                  "registrationTokenOperation": "Update"
                },
                "vmTemplate": "{\"domain\":\"\",\"galleryImageOffer\":\"office-365\",\"galleryImagePublisher\":\"microsoftwindowsdesktop\",\"galleryImageSKU\":\"win10-22h2-avd-m365-g2\",\"imageType\":\"Gallery\",\"customImageId\":null,\"namePrefix\":\"fp1\",\"osDiskType\":\"Premium_LRS\",\"vmSize\":{\"id\":\"Standard_D2s_v5\",\"cores\":2,\"ram\":8},\"galleryItemId\":\"microsoftwindowsdesktop.office-365win10-22h2-avd-m365-g2\",\"hibernate\":false,\"diskSizeGB\":128,\"securityType\":\"Standard\",\"secureBoot\":false,\"vTPM\":false,\"vmInfrastructureType\":\"Cloud\",\"virtualProcessorCount\":null,\"memoryGB\":null,\"maximumMemoryGB\":null,\"minimumMemoryGB\":null,\"dynamicMemoryConfig\":false}",
                "customRdpProperty": "drivestoredirect:s:*;audiomode:i:0;videoplaybackmode:i:1;redirectclipboard:i:1;redirectprinters:i:1;devicestoredirect:s:*;redirectcomports:i:1;redirectsmartcards:i:1;usbdevicestoredirect:s:*;enablecredsspsupport:i:1;redirectwebauthn:i:1;use multimon:i:1;enablerdsaadauth:i:1;",
                "publicNetworkAccess": "Disabled",
                "managementType": "Standard"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('hostpoolName'))]",
              "name": "avd-hostpool-diagnostics",
              "properties": {
                "workspaceId": "[variables('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "Checkpoint",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  },
                  {
                    "category": "Error",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  },
                  {
                    "category": "Management",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]"
              ]
            },
            {
              "type": "Microsoft.DesktopVirtualization/applicationGroups",
              "apiVersion": "2024-04-08-preview",
              "name": "[parameters('appGroupName')]",
              "location": "[parameters('avdMetadataLocation')]",
              "properties": {
                "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]",
                "friendlyName": "Default Desktop",
                "description": "Desktop Application Group created by Schoolyear",
                "applicationGroupType": "Desktop"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]"
              ]
            },
            {
              "type": "Microsoft.DesktopVirtualization/workspaces",
              "apiVersion": "2024-04-08-preview",
              "name": "[parameters('workSpaceName')]",
              "location": "[parameters('avdMetadataLocation')]",
              "properties": {
                "applicationGroupReferences": [
                  "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('appGroupName'))]"
                ],
                "publicNetworkAccess": "Disabled",
                "friendlyName": "Safe Exam Workspace"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('appGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[variables('privateEndpointConnectionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('servicesSubnetResourceId')]"
                },
                "customNetworkInterfaceName": "[variables('privateEndpointConnectionNicName')]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointConnectionName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]",
                      "groupIds": [
                        "connection"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[variables('privateEndpointConnectionZoneLinkName')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-wvd-microsoft-com",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateLinkZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[variables('privateEndpointFeedName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('servicesSubnetResourceId')]"
                },
                "customNetworkInterfaceName": "[variables('privateEndpointFeedNicName')]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointFeedName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('workSpaceName'))]",
                      "groupIds": [
                        "feed"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('workSpaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[variables('privateEndpointFeedZoneLinkName')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-wvd-microsoft-com",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateLinkZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointFeedName'))]"
              ]
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('workSpaceName')), '2024-04-08-preview').objectId]"
            },
            "hostpoolId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName')), '2024-04-08-preview').objectId]"
            },
            "hostpoolRegistrationToken": {
              "type": "string",
              "value": "[reference(parameters('hostpoolName')).registrationInfo.token]"
            },
            "appGroupId": {
              "type": "string",
              "value": "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('appGroupName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "proxyNetwork",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "proxyIpName": {
            "value": "[variables('proxyIpName')]"
          },
          "proxyNsgName": {
            "value": "[variables('proxyNsgName')]"
          },
          "proxyNicName": {
            "value": "[variables('proxyNicName')]"
          },
          "proxyVmName": {
            "value": "[variables('proxyVmName')]"
          },
          "servicesSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network-deployment'), '2022-09-01').outputs.servicesSubnetId.value]"
          },
          "disableSsh": {
            "value": "[not(bool(if(empty(variables('enableProxySsh')), 'false', variables('enableProxySsh'))))]"
          },
          "numProxyVms": {
            "value": "[variables('numProxyVms')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "2685443221654306559"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "proxyIpName": {
              "type": "string"
            },
            "proxyNsgName": {
              "type": "string"
            },
            "proxyNicName": {
              "type": "string"
            },
            "proxyVmName": {
              "type": "string"
            },
            "servicesSubnetId": {
              "type": "string"
            },
            "disableSsh": {
              "type": "bool"
            },
            "numProxyVms": {
              "type": "int"
            }
          },
          "variables": {
            "httpsInboundRule": {
              "name": "AllowAnyHTTPSInbound",
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
              }
            },
            "sshInboundRule": {
              "name": "AllowAnySSHInbound",
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            "securityRules": "[concat(createArray(variables('httpsInboundRule')), if(parameters('disableSsh'), createArray(), createArray(variables('sshInboundRule'))))]"
          },
          "resources": [
            {
              "copy": {
                "name": "proxyPublicIPAddresses",
                "count": "[length(range(0, parameters('numProxyVms')))]"
              },
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-{1}', parameters('proxyIpName'), range(0, parameters('numProxyVms'))[copyIndex()])]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ddosSettings": {
                  "protectionMode": "VirtualNetworkInherited"
                }
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-04-01",
              "name": "[parameters('proxyNsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[variables('securityRules')]"
              }
            },
            {
              "copy": {
                "name": "proxyNetworkInterfaces",
                "count": "[length(range(0, parameters('numProxyVms')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-{1}', parameters('proxyNicName'), range(0, parameters('numProxyVms'))[copyIndex()])]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[format('{0}-{1}-nic-ipconfig', parameters('proxyVmName'), range(0, parameters('numProxyVms'))[copyIndex()])]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-{1}', parameters('proxyIpName'), range(0, parameters('numProxyVms'))[range(0, parameters('numProxyVms'))[copyIndex()]]))]"
                      },
                      "subnet": {
                        "id": "[parameters('servicesSubnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('proxyNsgName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('proxyNsgName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-{1}', parameters('proxyIpName'), range(0, parameters('numProxyVms'))[range(0, parameters('numProxyVms'))[copyIndex()]]))]"
              ]
            }
          ],
          "outputs": {
            "proxyNicIDs": {
              "type": "array",
              "copy": {
                "count": "[length(range(0, parameters('numProxyVms')))]",
                "input": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-{1}', parameters('proxyNicName'), range(0, parameters('numProxyVms'))[range(0, parameters('numProxyVms'))[copyIndex()]]))]"
              }
            },
            "proxyNicPrivateIpAddresses": {
              "type": "array",
              "copy": {
                "count": "[length(range(0, parameters('numProxyVms')))]",
                "input": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-{1}', parameters('proxyNicName'), range(0, parameters('numProxyVms'))[range(0, parameters('numProxyVms'))[copyIndex()]])), '2020-06-01').ipConfigurations[0].properties.privateIPAddress]"
              }
            },
            "proxyPublicIpAddresses": {
              "type": "array",
              "copy": {
                "count": "[length(range(0, parameters('numProxyVms')))]",
                "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-{1}', parameters('proxyIpName'), range(0, parameters('numProxyVms'))[range(0, parameters('numProxyVms'))[copyIndex()]])), '2023-04-01').ipAddress]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "proxyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "proxyVmName": {
            "value": "[variables('proxyVmName')]"
          },
          "proxyVmSize": {
            "value": "[variables('proxyVmSize')]"
          },
          "proxyNicIDs": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'proxyNetwork'), '2022-09-01').outputs.proxyNicIDs.value]"
          },
          "proxyAdminUsername": {
            "value": "[parameters('proxyAdminUsername')]"
          },
          "sshPubKey": {
            "value": "[variables('sshPubKey')]"
          },
          "keyVaultRoleAssignmentDeploymentName": {
            "value": "[variables('keyVaultRoleAssignmentDeploymentName')]"
          },
          "examId": {
            "value": "[parameters('examId')]"
          },
          "keyVaultResourceGroup": {
            "value": "[variables('keyVaultResourceGroup')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "proxyDnsEntryDeploymentName": {
            "value": "[variables('proxyDnsEntryDeploymentName')]"
          },
          "dnsZoneResourceGroup": {
            "value": "[variables('dnsZoneResourceGroup')]"
          },
          "proxyPublicIpAddresses": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'proxyNetwork'), '2022-09-01').outputs.proxyPublicIpAddresses.value]"
          },
          "dnsZoneName": {
            "value": "[variables('dnsZoneName')]"
          },
          "proxyInstallScriptUrl": {
            "value": "[variables('proxyInstallScriptUrl')]"
          },
          "proxyInstallScriptName": {
            "value": "[variables('proxyInstallScriptName')]"
          },
          "hostpoolId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'avd-deployment'), '2022-09-01').outputs.hostpoolId.value]"
          },
          "workspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'avd-deployment'), '2022-09-01').outputs.workspaceId.value]"
          },
          "sessionHostProxyWhitelist": {
            "value": "[variables('sessionHostProxyWhitelist')]"
          },
          "trustedProxySecret": {
            "value": "[parameters('trustedProxySecret')]"
          },
          "apiBaseUrl": {
            "value": "[parameters('apiBaseUrl')]"
          },
          "trustedProxyBinaryUrl": {
            "value": "[variables('trustedProxyBinaryUrl')]"
          },
          "keyVaultCertificateName": {
            "value": "[variables('keyVaultCertificateName')]"
          },
          "ipRangesWhitelist": {
            "value": "[variables('ipRangesWhitelist')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "2070309928325081057"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "proxyVmName": {
              "type": "string"
            },
            "proxyVmSize": {
              "type": "string"
            },
            "proxyNicIDs": {
              "type": "array"
            },
            "proxyAdminUsername": {
              "type": "string"
            },
            "sshPubKey": {
              "type": "string"
            },
            "keyVaultRoleAssignmentDeploymentName": {
              "type": "string"
            },
            "examId": {
              "type": "string"
            },
            "keyVaultResourceGroup": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "proxyDnsEntryDeploymentName": {
              "type": "string"
            },
            "dnsZoneResourceGroup": {
              "type": "string"
            },
            "proxyPublicIpAddresses": {
              "type": "array"
            },
            "dnsZoneName": {
              "type": "string"
            },
            "proxyInstallScriptUrl": {
              "type": "string"
            },
            "proxyInstallScriptName": {
              "type": "string"
            },
            "hostpoolId": {
              "type": "string"
            },
            "workspaceId": {
              "type": "string"
            },
            "sessionHostProxyWhitelist": {
              "type": "string"
            },
            "trustedProxySecret": {
              "type": "securestring"
            },
            "apiBaseUrl": {
              "type": "string"
            },
            "trustedProxyBinaryUrl": {
              "type": "string"
            },
            "keyVaultCertificateName": {
              "type": "string"
            },
            "ipRangesWhitelist": {
              "type": "array"
            },
            "proxyVmAdminPassword": {
              "type": "securestring",
              "defaultValue": "[newGuid()]"
            }
          },
          "variables": {
            "disableSsh": "[if(empty(parameters('sshPubKey')), true(), false())]",
            "ipRangesWhitelistStr": "[join(parameters('ipRangesWhitelist'), ',')]"
          },
          "resources": [
            {
              "copy": {
                "name": "proxyVMs",
                "count": "[length(range(0, length(parameters('proxyNicIDs'))))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[copyIndex()])]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('proxyVmSize')]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[parameters('proxyNicIDs')[range(0, length(parameters('proxyNicIDs')))[copyIndex()]]]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[copyIndex()])]",
                  "adminUsername": "[parameters('proxyAdminUsername')]",
                  "adminPassword": "[if(variables('disableSsh'), parameters('proxyVmAdminPassword'), null())]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": "[if(variables('disableSsh'), false(), true())]",
                    "ssh": "[if(variables('disableSsh'), null(), createObject('publicKeys', createArray(createObject('keyData', parameters('sshPubKey'), 'path', format('/home/{0}/.ssh/authorized_keys', parameters('proxyAdminUsername'))))))]"
                  }
                },
                "storageProfile": {
                  "osDisk": {
                    "deleteOption": "Delete",
                    "createOption": "FromImage"
                  },
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  }
                }
              }
            },
            {
              "copy": {
                "name": "proxyCustomScriptExt",
                "count": "[length(range(0, length(parameters('proxyNicIDs'))))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/{1}', format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]]), 'CustomScriptExtensionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "skipDos2Unix": true,
                  "fileUris": [
                    "[parameters('proxyInstallScriptUrl')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[format('bash {0} \"{1}.*.wvd.microsoft.com:*,{2}.*.wvd.microsoft.com:*\" \"{3}\" \"{4}\" \"{5}\" \"{6}\" \"{7}\" \"{8}\" \"{9}\" \"{10}\"', parameters('proxyInstallScriptName'), parameters('hostpoolId'), parameters('workspaceId'), parameters('sessionHostProxyWhitelist'), parameters('trustedProxySecret'), parameters('apiBaseUrl'), parameters('trustedProxyBinaryUrl'), parameters('keyVaultName'), parameters('keyVaultCertificateName'), variables('ipRangesWhitelistStr'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('dnsZoneResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('proxyDnsEntryDeploymentName'), parameters('examId'))), '2022-09-01').outputs.domain.value)]"
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('dnsZoneResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('proxyDnsEntryDeploymentName'), parameters('examId')))]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "keyVaultRoleAssignmentDeployments",
                "count": "[length(range(0, length(parameters('proxyNicIDs'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-{2}', parameters('keyVaultRoleAssignmentDeploymentName'), parameters('examId'), range(0, length(parameters('proxyNicIDs')))[copyIndex()])]",
              "resourceGroup": "[parameters('keyVaultResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "proxyVmName": {
                    "value": "[format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]])]"
                  },
                  "proxyPrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]])), '2023-03-01', 'full').identity.principalId]"
                  },
                  "keyVaultResourceGroup": {
                    "value": "[parameters('keyVaultResourceGroup')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.1.42791",
                      "templateHash": "7720767779143689328"
                    }
                  },
                  "parameters": {
                    "proxyVmName": {
                      "type": "string"
                    },
                    "proxyPrincipalId": {
                      "type": "string"
                    },
                    "keyVaultResourceGroup": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleAssignmentName": "[guid(resourceGroup().id, parameters('proxyVmName'), '4633458b-17de-408a-b874-0445c86b69e6')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                      "name": "[variables('roleAssignmentName')]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                        "principalId": "[parameters('proxyPrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ],
                  "outputs": {
                    "resourceUrl": {
                      "type": "string",
                      "value": "[format('https://management.azure.com/subscriptions/{0}/resourcegroups/{1}/providers/Microsoft.KeyVault/vaults/{2}/providers/Microsoft.Authorization/roleAssignments/{3}?api-version=2022-04-01', subscription().subscriptionId, parameters('keyVaultResourceGroup'), parameters('keyVaultName'), variables('roleAssignmentName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]]))]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('proxyVmName'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]]))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}', parameters('proxyDnsEntryDeploymentName'), parameters('examId'))]",
              "resourceGroup": "[parameters('dnsZoneResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ipv4Addresses": {
                    "value": "[parameters('proxyPublicIpAddresses')]"
                  },
                  "dnsZoneName": {
                    "value": "[parameters('dnsZoneName')]"
                  },
                  "dnsRecord": {
                    "value": "[parameters('examId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.1.42791",
                      "templateHash": "16125689294297695725"
                    }
                  },
                  "parameters": {
                    "ipv4Addresses": {
                      "type": "array"
                    },
                    "dnsZoneName": {
                      "type": "string"
                    },
                    "dnsRecord": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/dnsZones/A",
                      "apiVersion": "2018-05-01",
                      "name": "[format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord'))]",
                      "properties": {
                        "copy": [
                          {
                            "name": "ARecords",
                            "count": "[length(parameters('ipv4Addresses'))]",
                            "input": {
                              "ipv4Address": "[parameters('ipv4Addresses')[copyIndex('ARecords')]]"
                            }
                          }
                        ],
                        "TTL": 3600
                      }
                    }
                  ],
                  "outputs": {
                    "domain": {
                      "type": "string",
                      "value": "[substring(reference(resourceId('Microsoft.Network/dnsZones/A', split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[0], split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[1]), '2018-05-01').fqdn, 0, sub(length(reference(resourceId('Microsoft.Network/dnsZones/A', split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[0], split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[1]), '2018-05-01').fqdn), 1))]"
                    },
                    "resourceUrl": {
                      "type": "string",
                      "value": "[format('https://management.azure.com{0}?api-version=2018-05-01', resourceId('Microsoft.Network/dnsZones/A', split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[0], split(format('{0}/{1}', parameters('dnsZoneName'), parameters('dnsRecord')), '/')[1]))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "proxyDnsDeploymentDomain": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('dnsZoneResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('proxyDnsEntryDeploymentName'), parameters('examId'))), '2022-09-01').outputs.domain.value]"
            },
            "proxyDnsEntryDeploymentResourceUrl": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('dnsZoneResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('proxyDnsEntryDeploymentName'), parameters('examId'))), '2022-09-01').outputs.resourceUrl.value]"
            },
            "keyVaultRoleAssignmentDeploymentResourceUrls": {
              "type": "array",
              "copy": {
                "count": "[length(range(0, length(parameters('proxyNicIDs'))))]",
                "input": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', parameters('keyVaultRoleAssignmentDeploymentName'), parameters('examId'), range(0, length(parameters('proxyNicIDs')))[range(0, length(parameters('proxyNicIDs')))[copyIndex()]])), '2022-09-01').outputs.resourceUrl.value]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'avd-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'proxyNetwork')]"
      ]
    }
  ],
  "outputs": {
    "publicIps": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network-deployment'), '2022-09-01').outputs.ipAddresses.value]"
    },
    "proxyConfig": {
      "type": "object",
      "value": {
        "domains": [
          {
            "matcher": "*-*-*-*-*.*.wvd.microsoft.com",
            "proxy": "[reference(resourceId('Microsoft.Resources/deployments', 'proxyDeployment'), '2022-09-01').outputs.proxyDnsDeploymentDomain.value]"
          },
          {
            "matcher": "*rdgateway*.wvd.microsoft.com",
            "proxy": "[reference(resourceId('Microsoft.Resources/deployments', 'proxyDeployment'), '2022-09-01').outputs.proxyDnsDeploymentDomain.value]"
          }
        ]
      }
    },
    "resourceUrlsToDelete": {
      "type": "array",
      "value": "[flatten(createArray(reference(resourceId('Microsoft.Resources/deployments', 'proxyDeployment'), '2022-09-01').outputs.keyVaultRoleAssignmentDeploymentResourceUrls.value, createArray(reference(resourceId('Microsoft.Resources/deployments', 'proxyDeployment'), '2022-09-01').outputs.proxyDnsEntryDeploymentResourceUrl.value)))]"
    },
    "hostpoolName": {
      "type": "string",
      "value": "[variables('hostpoolName')]"
    },
    "vmNumberOfInstances": {
      "type": "int",
      "value": "[variables('vmNumberOfInstances')]"
    },
    "templateVersion": {
      "type": "string",
      "value": "[variables('templateVersion')]"
    },
    "appGroupId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'avd-deployment'), '2022-09-01').outputs.appGroupId.value]"
    },
    "vmNamePrefix": {
      "type": "string",
      "value": "[variables('vmNamePrefix')]"
    },
    "vmCreationTemplateUri": {
      "type": "string",
      "value": "[variables('vmCreationTemplateUri')]"
    },
    "vmCreationTemplateCommonInputParameters": {
      "type": "object",
      "value": {
        "location": "[variables('location')]",
        "sessionhostsSubnetId": "[reference(resourceId('Microsoft.Resources/deployments', 'network-deployment'), '2022-09-01').outputs.sessionHostsSubnetId.value]",
        "vmTags": {
          "apiBaseUrl": "[parameters('apiBaseUrl')]",
          "examId": "[parameters('examId')]",
          "instanceId": "[parameters('instanceId')]",
          "entraAuthority": "[parameters('entraAuthority')]",
          "entraClientId": "[parameters('entraClientId')]",
          "proxyVmIpAddr": "[format('{0}:8080', reference(resourceId('Microsoft.Resources/deployments', 'proxyNetwork'), '2022-09-01').outputs.proxyNicPrivateIpAddresses.value[0])]",
          "proxyVmIpAddresses": "[join(map(reference(resourceId('Microsoft.Resources/deployments', 'proxyNetwork'), '2022-09-01').outputs.proxyNicPrivateIpAddresses.value, lambda('ipAddr', format('{0}:8080', lambdaVariables('ipAddr')))), ',')]"
        },
        "vmSize": "Standard_D2s_v5",
        "vmAdminUser": "[parameters('vmAdminUser')]",
        "vmDiskType": "Premium_LRS",
        "vmImageId": "[variables('vmCustomImageSourceId')]",
        "artifactsLocation": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration_1.0.02566.260.zip",
        "hostPoolName": "[variables('hostpoolName')]",
        "hostPoolToken": "[reference(resourceId('Microsoft.Resources/deployments', 'avd-deployment'), '2022-09-01').outputs.hostpoolRegistrationToken.value]"
      }
    },
    "vmCreationResourceUrls": {
      "type": "array",
      "value": [
        "[format('https://management.azure.com/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Compute/virtualMachines/{{{{vmName}}}}?api-version=2021-04-01', subscription().subscriptionId, resourceGroup().name)]",
        "[format('https://management.azure.com/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/networkInterfaces/{{{{vmName}}}}-nic?api-version=2021-04-01', subscription().subscriptionId, resourceGroup().name)]"
      ]
    }
  }
}